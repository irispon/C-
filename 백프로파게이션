#include<stdio.h>
#include <stdlib.h>       //srand
#include <time.h>     //time

#define getSize(X) sizeof(X)/sizeof(X[0])
#define INPUTMAX 100
#define OUTPUTMAX 10
#define HIDDENMAX 20
#define TARGETMAX 10

struct node{
	double weight[20];
	double inputData;
	
	
}typedef Node;


double sigma(double*,int);
void initialize(Node*);
void check(Node*);
void readFile(char [30],char **,int*);

int main(void){
/*
double x[10]={0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,0.11};
int count = getSize(x);
printf("count: %d",count);
printf("\n\n %5f",sigma(x,count));
*/
Node inputnode[INPUTMAX];
Node additionalNode;
initialize(inputnode);
check(inputnode);



}


double sigma(double *x,int count){

double sum = 0;
int i = 0;
printf("\n시그마 실행\n\n"); 
for(i = 0; i<count;i++){
	sum = sum+x[i];	
	printf("합: %f\n",sum);
	
}	
return sum;
}

void initialize(Node *x){
	/*가중치 초기화 부분*/
	printf("\n\n가중치 초기화\n\n");
	srand( (unsigned)time(NULL) );
	double max =32767;
	int i=0;
	int j =0;
	for(i=0;i<INPUTMAX;i++){
		for(j=0;j<HIDDENMAX;j++){
		if(j%10==0){
	     	printf("\n");
	      }
		double random= rand()/max;
        printf("%f  ", random);	
        x[i].weight[j] =random;

		}

	}
	
	
   

}
void check(Node *x){
	/*가중치 초기화 체크*/
	printf("\n\n가중치 체크\n\n");
	srand( (unsigned)time(NULL) );
	int i=0;
	int j =0;
	for(i=0;i<INPUTMAX;i++){
		for(j=0;j<HIDDENMAX;j++){
		if(j%10==0){
	     	printf("\n");
	      }
		double random=  x[i].weight[j];
        printf("%f  ", random);	

		}

	}
   

}

void readFile(char filename[30],char **buffer,int* refsize){

	int size;

    FILE *fp = fopen(filename, "r");
	fseek(fp, 0, SEEK_END);

	size = ftell(fp);

    *buffer = (char*)malloc(size + 1);

    memset(*buffer, 0, size + 1);

    fseek(fp, 0, SEEK_SET);

    fread(*buffer, size, 1, fp);
    *refsize =size;

    fclose(fp);

}
